Quelques exemples de tests que j'ai effectué et dont vous pouvez vous inspirer

************************POST /api/products************************

- Test de création avec ID valide
{
  "id": 2445,
  "code": "string",
  "name": "Valid Product",
  "description": "Valid product description",
  "image": "image_url",
  "category": "Category 1",
  "price": 100,
  "quantity": 50,
  "internalReference": "ref123",
  "shellId": 10,
  "inventoryStatus": 1,  
  "rating": 5,
  "createdAt": "2025-01-20T19:57:45.388Z",  
  "updatedAt": "2025-01-20T19:57:45.388Z"   
}

- Test de création avec inventoryStatus invalide (en dehors de 0-2)

{
  "id": 2434,
  "code": "string",
  "name": "Valid Product",
  "description": "Valid product description",
  "image": "image_url",
  "category": "Category 1",
  "price": 100,
  "quantity": 50,
  "internalReference": "ref123",
  "shellId": 10,
  "inventoryStatus": 4,  
  "rating": 5,
  "createdAt": "2025-01-20T19:57:45.388Z",  
  "updatedAt": "2025-01-20T19:57:45.388Z"   
}

- Test de création avec données incorrectes (prix et quantité invalides)

{
  "id": 2436,
  "code": "string",
  "name": "Valid Product",
  "description": "Valid product description",
  "image": "image_url",
  "category": "Category 1",
  "price": -100,
  "quantity": -50,
  "internalReference": "ref123",
  "shellId": 10,
  "inventoryStatus": 2,  
  "rating": 5,
  "createdAt": "2025-01-20T19:57:45.388Z",  
  "updatedAt": "2025-01-20T19:57:45.388Z"   
}

Ainsi que le test avec id invalide etc.

( 
************************PATCH /api/products/{id}************************

- Test de mise à jour réussie avec des données valides (choisir un id existant et identique à l'id du produit à modifier)
{
  "id": 1,
  "code": "newCode",
  "name": "Updated Name",
  "description": "Updated Description",
  "image": "newImage.jpg",
  "category": "newCategory",
  "price": 100.50,
  "quantity": 50,
  "internalReference": "newRef",
  "shellId": 1,
  "inventoryStatus": 1,
  "rating": 4.5,
  "createdAt": "2025-01-01T00:00:00Z",
  "updatedAt": "2025-01-20T19:57:45.388Z"
}


- Test de produit non trouvé (404 Not Found)
{
  "id": 999,
  "code": "nonExistentCode",
  "name": "Non Existent Product",
  "description": "This product doesn't exist",
  "price": 50.00,
  "quantity": 10
}

- Test de valeur invalide pour une propriété (par exemple, prix négatif)
{
  "id": 1,
  "price": -50.00
}


************************POST /api/account*******************
- Test de création d'un utilisateur
{
  "username": "heisenberg",
  "firstname": "walter",
  "email": "walterwhite@example.com",
  "password": "jessiepinkman"
}

- Tester aussi avec mail existant

{
  "username": "mailexistant",
  "firstname": "skyler",
  "email": "walterwhite@example.com",
  "password": "testmailexistant"
}

- Test avec mdp trop court 

{
  "username": "light",
  "firstname": "yagami",
  "email": "kira@example.com",
  "password": "l"
}

- Test avec email mauvais format 

{
  "username": "light",
  "firstname": "yagami",
  "email": "kir",
  "password": "deathnote2000"
}

******* GET /api/account

Renvois tous les utilisateurs

******* POST /token

{
  "email": "admin@admin.com",
  "password": "adminadmin"
}

{
  "email": "walterwhite@example.com",
  "password": "jessiepinkman"
}